
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author apoha
 */
public class tumKitapHareketDosya extends javax.swing.JFrame {

    /**
     * Creates new form tumKitapHareketDosya
     */
    public tumKitapHareketDosya() {
        initComponents();
         //icon
        ImageIcon icon = new ImageIcon(getClass().getResource("/icon.png"));
        setIconImage(icon.getImage());
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TÜM KİTAP HAREKETLERİ");
        setBackground(new java.awt.Color(102, 102, 102));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TC", "ISBN", "# KİTAP", "Verildiği Tarih", "VADE Tarih", "İşlem Türü"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("PDF");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setBorderPainted(false);
        jButton1.setMargin(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 102, 204));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("WORD");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setBorderPainted(false);
        jButton2.setMargin(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 204, 0));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("EXEL");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.setBorderPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton1.setText("KULLANICI KAYDI VAR");
        jRadioButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton1İtemStateChanged(evt);
            }
        });
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseClicked(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(0, 0, 0));
        jRadioButton2.setText("KULLANICI KAYDI YOK");
        jRadioButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton2İtemStateChanged(evt);
            }
        });
        jRadioButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButton2)
                .addGap(87, 87, 87))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        FileOutputStream fos = null;
        BufferedOutputStream bos = null;
        XWPFDocument document = null;
        
        DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
        try {
        JFileChooser chooser = new JFileChooser("C:\\Users\\apoha\\Documents");
        chooser.setDialogTitle("WORD DOSYA OLUŞTUR");
        
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("WORD Dosyası", "docx");// sadece pdf gostercek
        chooser.setFileFilter(extensionFilter);
        
        int a = chooser.showSaveDialog(this);
            if (a==JFileChooser.APPROVE_OPTION) {
                document = new XWPFDocument();
                
                XWPFTable fTable=document.createTable();
                for(int i = 0;i<model.getRowCount();i++){
                    XWPFTableRow fTableRow = fTable.createRow();
                    
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        fTableRow.addNewTableCell().setText(model.getValueAt(i,  j).toString());
                    }
                }
                fos = new FileOutputStream(chooser.getSelectedFile()+".docx");
                bos = new BufferedOutputStream(fos);
                document.write(bos);
                JOptionPane.showMessageDialog(this, "WORD Dökümanı Başarıyla Oluşturuldu");
                
                
                
            }//if son
        } catch (Exception e) {
            
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        FileOutputStream fos = null;
        BufferedOutputStream bos = null;
        XSSFWorkbook fWorkbook = null;
        
        DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
        try {
        JFileChooser chooser = new JFileChooser("C:\\Users\\apoha\\Documents");
        chooser.setDialogTitle("EXEL DOSYA OLUŞTUR");
        
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("EXEL Dosyası", "xlsx","xls");// sadece pdf gostercek
        chooser.setFileFilter(extensionFilter);
        
        int a = chooser.showSaveDialog(this);
            if (a==JFileChooser.APPROVE_OPTION) {
                fWorkbook = new XSSFWorkbook(); // çalışma yeri oluşturuldu
                XSSFSheet fSheet = fWorkbook.createSheet();//sheet olustur
                
                
                for(int i = 0;i<model.getRowCount();i++){
                    XSSFRow fRow = fSheet.createRow(i);// tabloda kaç row warsa ekleyecek
                    
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        XSSFCell cell = fRow.createCell(j);
                        cell.setCellValue(model.getValueAt(i, j).toString());
                    }
                }
                fos = new FileOutputStream(chooser.getSelectedFile()+".xlsx");
                bos = new BufferedOutputStream(fos);
                fWorkbook.write(bos);
                JOptionPane.showMessageDialog(this, "EXEL Dökümanı Başarıyla Oluşturuldu");
                
                
                
            }//if son
        } catch (Exception e) {
            
        }        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser("C:\\Users\\apoha\\Documents");
        chooser.setDialogTitle("PDF DOSYA OLUŞTUR");
        
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("PDF Dosyası", "pdf");// sadece pdf gostercek
        chooser.setFileFilter(extensionFilter);
        
        Document document = new Document();
        int a = chooser.showSaveDialog(this);
        if (a==JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            try {
                PdfWriter.getInstance(document, new FileOutputStream(file+".pdf"));
                document.open();
                
                PdfPTable pdfPTable = new PdfPTable(6);
                int rov = jTable1.getRowCount();
                for (int i = 0; i < rov; i++) {
                    String tc = jTable1.getValueAt(i, 0).toString();
                    String isbn = jTable1.getValueAt(i, 1).toString();
                    String kitapS = jTable1.getValueAt(i, 2).toString();
                    String vTarih = jTable1.getValueAt(i, 3).toString();
                    String aTarih = jTable1.getValueAt(i, 4).toString();
                    String islemT = jTable1.getValueAt(i, 5).toString();
                    
                    pdfPTable.addCell(tc);
                    pdfPTable.addCell(isbn);
                    pdfPTable.addCell(kitapS);
                    pdfPTable.addCell(vTarih);//tabloya ekledik
                    pdfPTable.addCell(aTarih);
                    pdfPTable.addCell(islemT);

                }
                document.add(pdfPTable);//dökümana ekledik
            } catch (FileNotFoundException ex) {
                Logger.getLogger(tumKitapHareketDosya.class.getName()).log(Level.SEVERE, null, ex);
            } catch (DocumentException ex) {
                Logger.getLogger(tumKitapHareketDosya.class.getName()).log(Level.SEVERE, null, ex);
            }
            document.close();
            JOptionPane.showMessageDialog(this, "PDF Dökümanı Başarıyla Oluşturuldu");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton1İtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton1İtemStateChanged
        if (jRadioButton1.isSelected()) {
            kayitliKullanicilar();
        }
    }//GEN-LAST:event_jRadioButton1İtemStateChanged

    private void jRadioButton2İtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton2İtemStateChanged
        if (jRadioButton2.isSelected()) {
            kayitsizKullanicilar();
        }
    }//GEN-LAST:event_jRadioButton2İtemStateChanged

    private void jRadioButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseClicked
       if(jRadioButton1.isSelected()){
           if(jTable1.getRowCount() !=0){
               DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
               int rows =model.getRowCount();
               for(int i = rows-1;i>=0;i--){
                   model.removeRow(i);
               }
               kayitliKullanicilar();
               
           }
           else {
               kayitliKullanicilar();
           }
       }
    }//GEN-LAST:event_jRadioButton1MouseClicked

    private void jRadioButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseClicked
        if(jRadioButton2.isSelected()){
           if(jTable1.getRowCount() !=0){
               DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
               int rows =model.getRowCount();
               for(int i = rows-1;i>=0;i--){
                   model.removeRow(i);
               }
               kayitsizKullanicilar();
               
           }
           else {
               kayitsizKullanicilar();
           }
       }
    }//GEN-LAST:event_jRadioButton2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                {
                    javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(anaSayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(anaSayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(anaSayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(anaSayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tumKitapHareketDosya().setVisible(true);
            }
        });
    }
    public void kayitliKullanicilar(){
        java.sql.Connection connection = veritabaniBaglanti.getConnection();
        java.sql.Statement s ;
        java.sql.ResultSet rs;
        try {
            s = connection.createStatement();
            rs= s.executeQuery("SELECT * FROM `kitaphareketleri`");
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            while (rs.next()) {                
              String tc = rs.getString("TCno");
              String isbn = rs.getString("ISBNKH");
              String sayi = rs.getString("kitSay");
              String vTarih = rs.getString("teslimAlimTarihi");
              String aTarih = rs.getString("vadeTarih");
              String islemT = rs.getString("durumu");
              
              model.addRow(new Object[]{tc,isbn,sayi,vTarih,aTarih,
              islemT});
            }//while son
            
        } catch (Exception e) {
            System.err.println("veritabanı yada sql sorgu hatası...");
        }
        
    }
    public void kayitsizKullanicilar(){
        java.sql.Connection connection = veritabaniBaglanti.getConnection();
        java.sql.Statement s ;
        java.sql.ResultSet rs;
        try {
            s = connection.createStatement();
            rs= s.executeQuery("SELECT * FROM `kitaphareketikulyok`");
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            while (rs.next()) {                
              String tc = rs.getString("tc");
              String isbn = rs.getString("isbnKULYok");
              String sayi = rs.getString("kitapSayisi");
              String vTarih = rs.getString("verilenTarih");
              String aTarih = rs.getString("vadeTarih");
              String islemT = rs.getString("islemTuru");
              
              model.addRow(new Object[]{tc,isbn,sayi,vTarih,aTarih,
              islemT});
            }//while son
            
        } catch (Exception e) {
            System.err.println("veritabanı yada sql sorgu hatası...");
        }
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
